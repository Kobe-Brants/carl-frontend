name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    conclusion: success
  workflow_dispatch:  # Allows manual trigger
  push:
    branches:
      - dev
      - staging
      - main

permissions:
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || (github.ref == 'refs/heads/staging' && 'staging' || 'development') }}
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Step 3: Set environment variables based on branch
      - name: Set environment variables
        run: |
          echo "IS_DEVELOPMENT=${{ contains(github.ref, 'dev') }}" >> $GITHUB_ENV
          echo "IS_STAGING=${{ contains(github.ref, 'staging') }}" >> $GITHUB_ENV
          echo "IS_PRODUCTION=${{ contains(github.ref, 'main') }}" >> $GITHUB_ENV

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build the app based on the branch/environment
      - name: Build the project
        run: |
          if [ "${{ env.IS_DEVELOPMENT }}" = "true" ]; then
            npm run build:dev
          elif [ "${{ env.IS_STAGING }}" = "true" ]; then
            npm run build:staging
          elif [ "${{ env.IS_PRODUCTION }}" = "true" ]; then
            npm run build:prod
          fi

#      # Step 6: Deploy to GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
